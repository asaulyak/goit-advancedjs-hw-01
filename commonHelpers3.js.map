{"version":3,"file":"commonHelpers3.js","sources":["../src/js/03-feedback.js"],"sourcesContent":["import throttle from 'lodash.throttle';\n\nconst FORM_STATE_KEY = 'feedback-form-state';\n\nfunction getFormInputs(formElement) {\n  const formNodeNames = ['INPUT', 'TEXTAREA'];\n\n  return [...formElement.elements].filter(element =>\n    formNodeNames.includes(element.nodeName)\n  );\n}\n\nfunction validateForm(formElement) {\n  const inputs = getFormInputs(formElement);\n\n  return inputs.every(input => !!input.value);\n}\n\nfunction getFormData(formElement) {\n  const inputs = getFormInputs(formElement);\n\n  return inputs.reduce(\n    (acc, input) => ({ ...acc, [input.name]: input.value }),\n    {}\n  );\n}\n\nfunction submitForm(form) {\n  const formData = getFormData(form);\n\n  form.reset();\n  resetFormState();\n\n  console.log('form data', formData);\n}\n\nfunction bindEvents() {\n  const form = document.querySelector('.feedback-form');\n\n  if (!form) {\n    return;\n  }\n\n  setInitialFormData(form);\n\n  form.addEventListener(\n    'input',\n    throttle(() => {\n      const formData = getFormData(form);\n\n      setFormState(formData);\n    }, 500)\n  );\n\n  form.addEventListener('submit', event => {\n    event.preventDefault();\n\n    if (validateForm(form)) {\n      submitForm(form);\n    } else {\n      alert('All fields should be filled in');\n    }\n  });\n}\n\nfunction setFormState(state) {\n  localStorage.setItem(FORM_STATE_KEY, JSON.stringify(state));\n}\n\nfunction getFormState() {\n  const state = localStorage.getItem(FORM_STATE_KEY);\n\n  if (!state) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(state);\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction resetFormState() {\n  localStorage.removeItem(FORM_STATE_KEY);\n}\n\nfunction setInitialFormData(form) {\n  const formData = getFormState();\n\n  if (!formData) {\n    return;\n  }\n\n  Object.keys(formData).forEach(key => {\n    const formElement = form.elements[key];\n\n    if (!formElement) {\n      return;\n    }\n\n    formElement.value = formData[key];\n  });\n}\n\nbindEvents();\n"],"names":["FORM_STATE_KEY","getFormInputs","formElement","formNodeNames","element","validateForm","input","getFormData","acc","submitForm","form","formData","resetFormState","bindEvents","setInitialFormData","throttle","setFormState","event","state","getFormState","key"],"mappings":"wIAEA,MAAMA,EAAiB,sBAEvB,SAASC,EAAcC,EAAa,CAClC,MAAMC,EAAgB,CAAC,QAAS,UAAU,EAE1C,MAAO,CAAC,GAAGD,EAAY,QAAQ,EAAE,OAAOE,GACtCD,EAAc,SAASC,EAAQ,QAAQ,CAC3C,CACA,CAEA,SAASC,EAAaH,EAAa,CAGjC,OAFeD,EAAcC,CAAW,EAE1B,MAAMI,GAAS,CAAC,CAACA,EAAM,KAAK,CAC5C,CAEA,SAASC,EAAYL,EAAa,CAGhC,OAFeD,EAAcC,CAAW,EAE1B,OACZ,CAACM,EAAKF,KAAW,CAAE,GAAGE,EAAK,CAACF,EAAM,MAAOA,EAAM,QAC/C,CAAE,CACN,CACA,CAEA,SAASG,EAAWC,EAAM,CACxB,MAAMC,EAAWJ,EAAYG,CAAI,EAEjCA,EAAK,MAAK,EACVE,IAEA,QAAQ,IAAI,YAAaD,CAAQ,CACnC,CAEA,SAASE,GAAa,CACpB,MAAMH,EAAO,SAAS,cAAc,gBAAgB,EAE/CA,IAILI,EAAmBJ,CAAI,EAEvBA,EAAK,iBACH,QACAK,EAAS,IAAM,CACb,MAAMJ,EAAWJ,EAAYG,CAAI,EAEjCM,EAAaL,CAAQ,CACtB,EAAE,GAAG,CACV,EAEED,EAAK,iBAAiB,SAAUO,GAAS,CACvCA,EAAM,eAAc,EAEhBZ,EAAaK,CAAI,EACnBD,EAAWC,CAAI,EAEf,MAAM,gCAAgC,CAE5C,CAAG,EACH,CAEA,SAASM,EAAaE,EAAO,CAC3B,aAAa,QAAQlB,EAAgB,KAAK,UAAUkB,CAAK,CAAC,CAC5D,CAEA,SAASC,GAAe,CACtB,MAAMD,EAAQ,aAAa,QAAQlB,CAAc,EAEjD,GAAI,CAACkB,EACH,OAAO,KAGT,GAAI,CACF,OAAO,KAAK,MAAMA,CAAK,CACxB,MAAC,CACA,OAAO,IACR,CACH,CAEA,SAASN,GAAiB,CACxB,aAAa,WAAWZ,CAAc,CACxC,CAEA,SAASc,EAAmBJ,EAAM,CAChC,MAAMC,EAAWQ,IAEZR,GAIL,OAAO,KAAKA,CAAQ,EAAE,QAAQS,GAAO,CACnC,MAAMlB,EAAcQ,EAAK,SAASU,GAE7BlB,IAILA,EAAY,MAAQS,EAASS,GACjC,CAAG,CACH,CAEAP,EAAY"}